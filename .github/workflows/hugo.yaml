name: Deploy Hugo site to GitHub Pages

on:
  # Trigger on push to the main branch
  push:
    branches: [ main ]
  # Allows manual run from the Actions tab
  workflow_dispatch:

# GitHub Pages permissions (required)
permissions:
  contents: read
  pages: write
  id-token: write

# Ensure only one Pages deployment runs at a time
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Optional: Specify your desired Hugo version here
    env:
      HUGO_VERSION: 0.115.1
    
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          # If you use submodules, fetch them too:
          submodules: recursive
          # Depth=0 ensures you have full commit history
          fetch-depth: 0

      - name: Install Hugo CLI (extended)
        run: |
          wget -O ${{ runner.temp }}/hugo.deb \
            "https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb"
          sudo dpkg -i ${{ runner.temp }}/hugo.deb

      # (Optional) If your theme or build scripts need Dart Sass:
      - name: Install Dart Sass
        run: sudo snap install dart-sass

      # Optional: If your site needs npm dependencies (delete if unused)
      - name: Install Node.js dependencies
        run: |
          if [[ -f package-lock.json || -f npm-shrinkwrap.json ]]; then
            npm ci
          else
            echo "No Node.js dependencies to install."
          fi

      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      # Debug step: confirm ./public has files
      - name: List generated files
        run: |
          echo "Contents of ./public:"
          ls -lAh ./public || echo "No ./public directory found"

      - name: Upload artifact
        # Use @main to avoid deprecated versions of upload-artifact
        uses: actions/upload-pages-artifact@main
        with:
          # This defaults to artifact name "github-pages"
          # You can omit "name:" entirely if you want the default
          path: ./public

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      # This URL will become available once the deployment job finishes
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        # No 'artifact_name' means it looks for the default "github-pages"